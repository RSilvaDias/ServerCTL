// Limited numbers testing between 1 and 50
// Using Linear Congruential Generator 
// {4,9,19,24,29,34,39,44,49}
// Using Historical Data Resource entrypoint - HDR



component provides App requires io.Output out, net.http.HTTPRequest request, 
	data.IntUtil iu, time.Calendar ic, time.DateUtil dateUtil{
	int App:main(AppParam params[]) {
		int id = 0
		while(true) {
			DateTime seed = ic.getTime()
			id = dateUtil.toMilliseconds(seed)
			int a = 15
			int b = 24
			int m = 50
			id = (a*id+b)%m
            // 34.121.20.15:8081 - DC database on cluster
			char url[] = new char[]("34.121.20.15:8081/collector/resources/", iu.intToString(id), "/data")
            //char url[] = new char[]("localhost:8080/collector/resources/", iu.intToString(id), "/data")
			DateTime dt1 = null
			DateTime dt2 = null
			int result = 0
			dt1 = ic.getTime()
			HTTPResponse response = request.get(url, null)
			dt2 = ic.getTime()
            
			if ((dt1 != null) && (dt2 != null)) {
				result = dateUtil.toMilliseconds(dateUtil.diff(dt1, dt2))
			}
            
			out.println("HDR - id : $(iu.intToString(id)), response time: $(iu.intToString(result)) ms")
            
		}
		return 0
	}
}